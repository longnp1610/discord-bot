{
  // Place your discord_bot workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Slash Command": {
    "scope": "javascript,typescript",
    "prefix": "slc",
    "body": [
      "const { SlashCommandBuilder } = require('discord.js');",
      "",
      "module.exports = {",
      "  data: new SlashCommandBuilder()",
      "    .setName('${1:ping}')",
      "    .setDescription('${2:Replies with Pong!}'),",
      "  async execute(interaction) {",
      "    const {client, guild} = interaction",
      "    await interaction.reply({ content: 'Pong!', ephemeral: true });",
      "  },",
      "};"
    ],
    "description": "Normal Slash Command Builder"
  },
  "Slash Command Option": {
    "scope": "javascript,typescript",
    "prefix": "slco",
    "body": [
      "const { SlashCommandBuilder } = require('discord.js');",
      "",
      "module.exports = {",
      "  data: new SlashCommandBuilder()",
      "    .setName('${1:ping}')",
      "    .setDescription('${2:Replies with Pong!}')",
      "    .addStringOption((option) =>",
      "      option",
      "        .setName('${3:option}')",
      "        .setDescription('${4:option description}')",
      "        .setRequired(true)",
      "    ),",
      "  async execute(interaction) {",
      "    const {client, guild} = interaction",
      "    await interaction.reply({ content: 'Pong!', ephemeral: true });",
      "  },",
      "};"
    ],
    "description": "Option Slash Command Builder"
  }
}
